{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/problem.jsx","components/solution.jsx","components/features.jsx","components/Team.jsx","components/contact.jsx","components/slides.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","href","src","alt","width","height","Header","options","delay","deleteSpeed","PauseFor","strings","autoStart","loop","data","paragraph","Problem","map","d","i","icon","title","text","Solution","Features","name","Team","img","job","initialState","Contact","useState","phone","email","ClassName","url","target","bgColor","class","network","Date","getFullYear","Slides","frameborder","allowfullscreen","mozallowfullscreen","webkitallowfullscreen","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sOAAaA,EAAa,SAACC,GACzB,OACE,qBAAKC,GAAG,OAAOC,UAAU,yCAAzB,SACE,qBAAKA,UAAU,YAAf,SAEE,sBACEA,UAAU,2BACVD,GAAG,+BAFL,UAME,mBAAGC,UAAU,6BAA6BC,KAAK,IAA/C,SACE,+BACE,qBAAKC,IAAI,eAAeC,IAAI,OAAOC,MAAM,MAAMC,OAAO,aAI1D,qBAAIL,UAAU,8BAAd,UACE,6BACE,mBAAGC,KAAK,WAAWD,UAAU,cAA7B,uBAIF,6BACE,mBAAGC,KAAK,YAAYD,UAAU,cAA9B,wBAIF,6BACE,mBAAGC,KAAK,YAAYD,UAAU,cAA9B,wBAIL,6BACK,mBAAGC,KAAK,UAAUD,UAAU,cAA5B,sBAIF,6BACE,mBAAGC,KAAK,QAAQD,UAAU,cAA1B,oBAIF,6BACE,mBAAGC,KAAK,WAAWD,UAAU,cAA7B,kC,gBCzCDM,EAAS,SAACR,GACrB,OACE,wBAAQC,GAAG,SAAX,SACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,6BAEE,cAAC,IAAD,CACEO,QAAS,CACPC,MAAO,IACPC,YAAa,IACbC,SAAU,KACVC,QAAS,CAAC,cAAe,UAAW,YAAa,UAAW,cAAe,oBAC3EC,WAAW,EACXC,MAAM,OAMZ,4BAAIf,EAAMgB,KAAOhB,EAAMgB,KAAKC,UAAY,YACxC,mBACEd,KAAK,WACLD,UAAU,oCAFZ,wBAKK,kBChCRgB,EAAU,SAAClB,GACtB,OACE,qBAAKC,GAAG,UAAUC,UAAU,cAA5B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,2CAEF,qBAAKA,UAAU,MAAf,SACGF,EAAMgB,KACHhB,EAAMgB,KAAKG,KAAI,SAACC,EAAGC,GAAJ,OACb,sBAA6BnB,UAAU,oBAAvC,UACG,IACD,mBAAGA,UAAWkB,EAAEE,OAChB,6BAAKF,EAAEG,QACP,4BAAIH,EAAEI,SAJR,UAAaJ,EAAEG,MAAf,YAAwBF,OAO1B,qBCjBDI,EAAW,SAACzB,GACvB,OACE,qBAAKC,GAAG,WAAR,SACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACG,IACD,qBAAKE,IAAI,mBAAmBF,UAAU,iBAAiBG,IAAI,KAAM,OAGnE,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CACA,2EAA6C,oDAA7C,QAA4E,4CAA5E,yBAAoH,uBAAS,uBAA7H,iDACgD,4DAGhD,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,gCAGf,qBAAKA,UAAU,gDCrBlBwB,EAAW,SAAC1B,GACvB,OACE,qBAAKC,GAAG,WAAWC,UAAU,cAA7B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,2CAGF,qBAAKA,UAAU,MAAf,SACGF,EAAMgB,KACHhB,EAAMgB,KAAKG,KAAI,SAACC,EAAGC,GAAJ,OACb,sBAA4BnB,UAAU,WAAtC,UACG,IACD,mBAAGA,UAAWkB,EAAEE,OAChB,sBAAKpB,UAAU,eAAf,UACE,6BAAKkB,EAAEO,OACP,4BAAIP,EAAEI,YALV,UAAaJ,EAAEO,KAAf,YAAuBN,OASzB,kBCpBDO,EAAO,SAAC5B,GACnB,OACE,qBAAKC,GAAG,OAAOC,UAAU,cAAzB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,+CACA,uGACsE,uBADtE,0HAIF,qBAAKD,GAAG,MAAR,SACGD,EAAMgB,KACHhB,EAAMgB,KAAKG,KAAI,SAACC,EAAGC,GAAJ,OACb,qBAA4BnB,UAAU,yBAAtC,SACE,sBAAKA,UAAU,YAAf,UACG,IACD,qBAAKE,IAAKgB,EAAES,IAAKxB,IAAI,MAAMH,UAAU,aACrC,sBAAKA,UAAU,UAAf,UACE,6BAAKkB,EAAEO,OACP,4BAAIP,EAAEU,aANZ,UAAaV,EAAEO,KAAf,YAAuBN,OAWzB,kB,OCrBRU,EAAe,GAGRC,EAAU,SAAChC,GAErB,OADAiC,mBAASF,GAEN,gCACG,qBAAK9B,GAAG,UAAR,SACG,sBAAKC,UAAU,YAAf,UACG,sBAAKA,UAAU,WAAf,UACG,qBAAKA,UAAU,gBAAf,SACG,gDAGH,sBAAKA,UAAU,gBAAf,UAEG,8BACG,iCACG,mBAAGA,UAAU,gBADhB,YAEQ,IACPF,EAAMgB,KAAOhB,EAAMgB,KAAKkB,MAAQ,aAEpC,8BACG,iCACG,mBAAGhC,UAAU,mBADhB,YAEQ,IACPF,EAAMgB,KAAOhB,EAAMgB,KAAKmB,MAAQ,mBAI1C,qBAAKjC,UAAU,eAAf,SACG,sBAAKA,UAAU,kBAAf,UACG,2CAEA,cAAC,aAAD,CAAYkC,UAAU,UAAUC,IAAI,iCAAiCC,OAAO,QAAQC,QAAQ,SAH/F,MAG2G,sBAAMC,MAAM,SAAZ,kCACxG,cAAC,aAAD,CAAYJ,UAAU,SAASC,IAAI,mCAAmCC,OAAO,QAAQC,QAAQ,SAJhG,IAI0G,sBAAMC,MAAM,SAAZ,kCACvG,cAAC,aAAD,CAAYJ,UAAU,UAAUC,IAAI,+BAA+BC,OAAO,QAAQC,QAAQ,SAL7F,KAKwG,sBAAMC,MAAM,SAAZ,kCACrG,sBACA,cAAC,aAAD,CAAYJ,UAAU,WAAWC,IAAI,2CAA2CC,OAAO,QAAQC,QAAQ,SAP1G,KAOqH,sBAAMC,MAAM,SAAZ,kCAClH,cAAC,aAAD,CAAYJ,UAAU,WAAWC,IAAI,mDAAmDC,OAAO,QAAQC,QAAQ,OAAOE,QAAQ,aARjI,KAQgJ,sBAAMD,MAAM,SAAZ,kCAC7I,cAAC,aAAD,CAAYJ,UAAU,WAAWC,IAAI,4CAA4CC,OAAO,QAAQC,QAAQ,SAT3G,KASsH,sBAAMC,MAAM,SAAZ,4CAQ/H,qBAAKvC,GAAG,SAAR,SACG,sBAAKC,UAAU,wBAAf,mBACM,IAAIwC,MAAOC,cADjB,2CCpDCC,EAAS,WAClB,OACA,qBAAK3C,GAAG,SAASC,UAAU,cAA3B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,0CAAf,SACG,gDAEH,qBAAKA,UAAU,gBAAf,SACA,wBAAQqB,MAAM,OACNnB,IAAI,6IACJyC,YAAY,IACZvC,MAAM,MAAMC,OAAO,MACnBuC,gBAAgB,OAChBC,mBAAmB,OAAOC,sBAAsB,iB,eCyBjDC,GAzBO,I,OAAIC,GAAa,eAAgB,CACrDC,MAAO,IACPC,iBAAiB,IAGP,WAAO,IAAD,EAC8BnB,mBAAS,IADvC,mBACToB,EADS,KACQC,EADR,KAMhB,OAJAC,qBAAU,WACRD,EAAmBE,KAClB,IAGD,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQxC,KAAMqC,EAAgB7C,SAC9B,cAAC,EAAD,CAASQ,KAAMqC,EAAgBnC,UAC/B,cAAC,EAAD,CAAUF,KAAMqC,EAAgB5B,WAChC,cAAC,EAAD,CAAUT,KAAMqC,EAAgB3B,WAChC,cAAC,EAAD,IACA,cAAC,EAAD,CAAMV,KAAMqC,EAAgBzB,OAC5B,cAAC,EAAD,CAASZ,KAAMqC,EAAgBrB,eCrBjByB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.106f3596.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          \r\n\r\n          <a className='nav navbar-nav navbar-left' href='#'>\r\n            <span>\r\n              <img src='img/logo.png' alt='logo' width=\"163\" height=\"58.5\" />\r\n            </span>\r\n          </a>\r\n\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#problem' className='page-scroll'>\r\n                Problem\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#solution' className='page-scroll'>\r\n                Solution\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Features\r\n              </a>\r\n            </li>\r\n         <li>\r\n              <a href='#slides' className='page-scroll'>\r\n                Slides\r\n              </a>\r\n            </li> \r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Team\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#contact' className='page-scroll'>\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import Typewriter from 'typewriter-effect';\r\n\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                <h1>\r\n\r\n                  <Typewriter\r\n                    options={{\r\n                      delay: 100,\r\n                      deleteSpeed: 100,\r\n                      PauseFor: 2500,\r\n                      strings: ['Mathematics', 'Physics', 'Chemistry', 'Biology', 'Engineering', 'Computer Science'],\r\n                      autoStart: true,\r\n                      loop: true,\r\n                    }}\r\n                  />\r\n\r\n\r\n                </h1>\r\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\r\n                <a\r\n                  href='#problem'\r\n                  className='btn btn-custom btn-lg page-scroll'\r\n                >\r\n                  Learn More\r\n                </a>{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const Problem = (props) => {\r\n  return (\r\n    <div id='problem' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n          <h2>Problem</h2>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-4'>\r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <h3>{d.title}</h3>\r\n                  <p>{d.text}</p>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Solution = (props) => {\r\n  return (\r\n    <div id='solution'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-6'>\r\n            {' '}\r\n            <img src='img/solution.png' className='img-responsive' alt='' />{' '}\r\n\r\n          </div>\r\n          <div className='col-xs-12 col-md-6'>\r\n            <div className='about-text'>\r\n              <h2>Solution</h2>\r\n              <p>A platform that offers STEM content using <b>interactive visuals</b> and <b>voice-overs</b> in your own dialect! <br></br><br></br>\r\n                We currently support the following dialects:  <i>Moroccan Arabic (Darija)</i>\r\n              </p>\r\n\r\n              <div className='list-style'>\r\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\r\n\r\n                </div>\r\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Features = (props) => {\r\n  return (\r\n    <div id='features' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>why us?</h2>\r\n \r\n        </div>\r\n        <div className='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-lg-4'>  \r\n                  {' '}\r\n                  <i className={d.icon}></i>\r\n                  <div className='service-desc'>\r\n                    <h3>{d.name}</h3>\r\n                    <p>{d.text}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Team = (props) => {\r\n  return (\r\n    <div id='team' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n          <h2>Meet the Team</h2>\r\n          <p>\r\n          We are a team of 3, coming from different backgrounds and experiences.<br></br> Our passion for STEM and the aspiration to improve education is what brought us together to launch this startup. \r\n          </p>\r\n        </div>\r\n        <div id='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n                <div key={`${d.name}-${i}`} className='col-md-4 col-sm-5 team'>\r\n                  <div className='thumbnail'>\r\n                    {' '}\r\n                    <img src={d.img} alt='...' className='team-img' />\r\n                    <div className='caption'>\r\n                      <h4>{d.name}</h4>\r\n                      <p>{d.job}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nconst initialState = {}\r\n\r\n\r\nexport const Contact = (props) => {\r\n   useState(initialState)\r\n   return (\r\n      <div>\r\n         <div id='contact'>\r\n            <div className='container'>\r\n               <div className='col-md-8'>\r\n                  <div className='section-title'>\r\n                     <h2>Get In Touch</h2>\r\n\r\n                  </div>\r\n                  <div className='contact-item '>\r\n\r\n                     <p>\r\n                        <span>\r\n                           <i className='fa fa-phone'></i> Phone\r\n                        </span>{' '}\r\n                        {props.data ? props.data.phone : 'loading'}\r\n                     </p>\r\n                     <p>\r\n                        <span>\r\n                           <i className='fa fa-envelope'></i> Email\r\n                        </span>{' '}\r\n                        {props.data ? props.data.email : 'loading'}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n               <div className='social-media'>\r\n                  <div className='section-title-2'>\r\n                     <h2>Follow us</h2>\r\n\r\n                     <SocialIcon ClassName='youtube' url=\"https://youtube.com/c/KaTuripu\" target=\"blank\" bgColor='#fff' />   <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                     <SocialIcon ClassName='tiktok' url=\"https://www.tiktok.com/@katuripu\" target=\"blank\" bgColor='#fff' /> <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                     <SocialIcon ClassName='patreon' url=\"https://patreon.com/katuripu\" target=\"blank\" bgColor='#fff' />  <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                     <p></p> \r\n                     <SocialIcon ClassName='facebook' url=\"https://www.facebook.com/groups/katuripu\" target=\"blank\" bgColor='#fff' />  <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                     <SocialIcon ClassName='whatsapp' url=\"https://chat.whatsapp.com/FRYi55sFxJ1CZmwA8eGory\" target=\"blank\" bgColor='#fff' network='whatsapp' />  <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                     <SocialIcon ClassName='linkedin' url=\"https://www.linkedin.com/company/katuripu\" target=\"blank\" bgColor='#fff' />  <span class=\"spanen\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  </div>\r\n\r\n               </div>\r\n\r\n            </div>\r\n\r\n         </div>\r\n         <div id='footer'>\r\n            <div className='container text-center'>\r\n               © {new Date().getFullYear()} KaTuripu | All Rights Reserved\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","export const Slides = () => {\r\n    return (\r\n    <div id='slides' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n           <h2>Presentation</h2> \r\n        </div>\r\n        <div className='google-slides'>\r\n        <iframe title=\"meow\"\r\n                src=\"https://docs.google.com/presentation/d/1J8nJjxj2QWeuGOZC5lKdZjgHmhm0HHKy2PtrgTYFKWc/embed?start=false&loop=false&delayms=15000&slide=id.p1\" \r\n                frameborder=\"0\" \r\n                width=\"960\" height=\"569\" \r\n                allowfullscreen=\"true\" \r\n                mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\">\r\n\r\n        </iframe>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { Navigation } from './components/navigation'\r\nimport { Header } from './components/header'\r\nimport { Problem } from './components/problem'\r\nimport { Solution } from './components/solution'\r\nimport { Features } from './components/features'\r\nimport { Team } from './components/Team'\r\nimport { Contact } from './components/contact'\r\nimport { Slides } from './components/slides'\r\nimport JsonData from './data/data.json'\r\nimport SmoothScroll from 'smooth-scroll'\r\nimport React from 'react';\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n})\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({})\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      <Problem data={landingPageData.Problem} />\r\n      <Solution data={landingPageData.Solution} />\r\n      <Features data={landingPageData.Features} />\r\n      <Slides />\r\n      <Team data={landingPageData.Team} />\r\n      <Contact data={landingPageData.Contact} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}